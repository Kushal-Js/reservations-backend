version: '3.3'
services:
  mongodb:
    image : mongo
    container_name: mongodb
    volumes:
      - ./database:/data/db
    ports:
      - 27017:27017
    networks:
      - nesjs-network
    restart: always
  reservations:
    image: kushalgaur123/reservations:latest
    environment:
      - PORT=3000
      - AUTH_HOST=auth
      - AUTH_TCP_PORT=3003
      - HOTELS_HOST=hotels
      - HOTELS_TCP_PORT=3004
      - JWT_EXPIRATION=604800
      - MONGODB_URI=mongodb://mongodb:27017/hotel
      - MONGODB_ATLAS_URI=mongodb+srv://kushalgaur:mongodb_password@bookingcluster.sqm7w1b.mongodb.net/?retryWrites=true&w=majority&appName=bookingCluster
    build:
      context: .
      dockerfile: ./apps/reservations/Dockerfile
      target: development
    command: pnpm run start:dev reservations
    env_file:
      - .env
    ports:
      - '3000:3000'
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    volumes:
      - .:/usr/src/app
    restart: unless-stopped
  auth:
    image: kushalgaur123/auth:latest
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: pnpm run start:dev auth
    env_file:
      - .env
    ports:
      - '3001:3001'
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    volumes:
      - .:/usr/src/app
    restart: unless-stopped
  hotels:
    image: kushalgaur123/hotels:latest
    build:
      context: .
      dockerfile: ./apps/hotels/Dockerfile
      target: development
    command: pnpm run start:dev hotels
    env_file:
      - .env
    ports:
      - '3002:3002'
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    volumes:
      - .:/usr/src/app
    restart: unless-stopped
  gateway:
    image: kushalgaur123/gateway:latest
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
      target: development
    command: pnpm run start:dev gateway
    env_file:
      - .env
    ports:
      - '3005:3005'
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    volumes:
      - .:/usr/src/app
    restart: unless-stopped
networks:
    nesjs-network:
      driver: bridge
