version: '3.3'
services:
  mongodb:
    image : mongo
    container_name: mongodb
    volumes:
      - ./usr/local/var/mongodb:/data/db
    ports:
      - 27017:27017
    networks:
      - nesjs-network
    restart: always
  reservations:
    build:
      context: .
      dockerfile: ./apps/reservations/Dockerfile
      target: development
    command: pnpm run start:dev reservations
    env_file:
      - ./apps/reservations/.env
    ports:
      - '3000:3000'
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    volumes:
      - .:/usr/src/app
    restart: unless-stopped
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: pnpm run start:dev auth
    env_file:
      - ./apps/auth/.env
    ports:
      - '3001:3001'
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    volumes:
      - .:/usr/src/app
    restart: unless-stopped
  hotels:
    build:
      context: .
      dockerfile: ./apps/hotels/Dockerfile
      target: development
    command: pnpm run start:dev hotels
    env_file:
      - ./apps/hotels/.env
    ports:
      - '3002:3002'
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    volumes:
      - .:/usr/src/app
    restart: unless-stopped
networks:
    nesjs-network:
      driver: bridge
